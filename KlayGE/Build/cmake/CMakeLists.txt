LIST(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/../../../cmake")

PROJECT(KlayGE)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.6)

IF(COMMAND cmake_policy)
	CMAKE_POLICY(SET CMP0003 NEW)
ENDIF(COMMAND cmake_policy)

SET(KLAYGE_MAJOR_VERSION 4)
SET(KLAYGE_MINOR_VERSION 6)
SET(KLAYGE_PATCH_VERSION 0)
SET(KLAYGE_VERSION ${KLAYGE_MAJOR_VERSION}.${KLAYGE_MINOR_VERSION}.${KLAYGE_PATCH_VERSION})

FIND_PATH(KLAYGE_PROJECT_DIR klayge_logo.ico PATHS ../../)
MARK_AS_ADVANCED(KLAYGE_PROJECT_DIR)
SET(KLAYGE_ROOT_DIR "${KLAYGE_PROJECT_DIR}/..")

INCLUDE(${KLAYGE_ROOT_DIR}/cmake/Common.cmake)
INCLUDE(${KLAYGE_ROOT_DIR}/cmake/Platform.cmake)
INCLUDE(${KLAYGE_ROOT_DIR}/cmake/Compiler.cmake)
INCLUDE(${KLAYGE_ROOT_DIR}/cmake/ConfigBoost.cmake)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

# Main settings and dependencies
SET(KLAYGE_CORELIB_NAME KlayGE_Core)  # Dependency of all other targets

SET(KLAYGE_OUTPUT_DIR "${KLAYGE_PROJECT_DIR}/lib/${KLAYGE_PLATFORM_NAME}")
SET(KLAYGE_BIN_DIR "${KLAYGE_PROJECT_DIR}/bin/${KLAYGE_PLATFORM_NAME}")

# Projects
ADD_SUBDIRECTORY(Core)

ADD_SUBDIRECTORY(Plugins/Scene/OCTree)
ADD_SUBDIRECTORY(Plugins/Input/MsgInput)
ADD_SUBDIRECTORY(Plugins/Script/Python)

IF(NOT KLAYGE_PLATFORM_WINDOWS_RUNTIME)
	IF((NOT KLAYGE_PLATFORM_ANDROID) AND (NOT KLAYGE_PLATFORM_IOS))
		ADD_SUBDIRECTORY(Plugins/Render/OpenGL)
	ENDIF()
	ADD_SUBDIRECTORY(Plugins/Render/OpenGLES)

	IF((NOT KLAYGE_PLATFORM_ANDROID) AND (NOT KLAYGE_PLATFORM_IOS) AND (NOT KLAYGE_PLATFORM_NAME STREQUAL "win_arm"))
		ADD_SUBDIRECTORY(Plugins/Audio/OpenAL)
	ENDIF()

	ADD_SUBDIRECTORY(Plugins/Audio/OggVorbis)
ENDIF()

IF(KLAYGE_PLATFORM_WINDOWS_DESKTOP OR KLAYGE_PLATFORM_WINDOWS_RUNTIME)
	ADD_SUBDIRECTORY(Plugins/Render/D3D11)
	IF(KLAYGE_COMPILER_MSVC AND (KLAYGE_COMPILER_VERSION STRGREATER "120"))
		ADD_SUBDIRECTORY(Plugins/Render/D3D12)
	ENDIF()
ENDIF()

IF(KLAYGE_PLATFORM_WINDOWS_DESKTOP)
	ADD_SUBDIRECTORY(Plugins/Audio/DSound)
	ADD_SUBDIRECTORY(Plugins/Show/DShow)
	ADD_SUBDIRECTORY(KGEConfig)
ENDIF()
